name: Simple Node.js application CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Run lint (optional)
      - name: Run lint
        run: npm run lint --if-present

      # 5️⃣ Run tests (optional)
      - name: Run tests
        run: npm test --if-present

      # 6️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 7️⃣ Build Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: express-hello:latest
          platforms: linux/amd64,linux/arm64
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 8️⃣ Test Docker image
      - name: Test Docker image
        run: |
          docker run -d -p 3500:3500 --name test-container express-hello:latest
          sleep 5
          curl -f http://localhost:3500/health || exit 1
          docker stop test-container
          docker rm test-container

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker BuildX
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Extract meta-data for tags
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/express-hello
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-

      # Build and push to Docker Hub
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
